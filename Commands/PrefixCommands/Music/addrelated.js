import { commandBuilders, EmbedBuilders } from "../../../Events/functions.js";
import { fileURLToPath } from 'node:url';
import path from "node:path";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const commands = new commandBuilders({
  name: path.parse(__filename).name, // T√™n L·ªánh ch√≠nh
  usage: path.parse(__filename).name, // C√°ch s·ª≠ d·ª•ng khi d√πng l·ªánh help.
  category: path.parse(__dirname).name, // th·ªÉ lo·∫°i l·ªánh
  aliases: [], // l·ªánh ph·ª•
  description: "üîç T√¨m ki·∫øm b√†i h√°t li√™n quan", // m√¥ t·∫£ d√†nh cho l·ªánh
  cooldown: 5, // th·ªùi gian h·ªìi l·ªánh
  owner: false, // b·∫≠t t·∫Øt ch·∫ø ƒë·ªô dev
  permissions: [] // quy·ªÅn h·∫°n khi s·ª≠ d·ª•ng l·ªánh
}).addCommand(async (client, message, args, prefix) => {
  const VoiceChannel = message.member.voice.channel;
	if (!VoiceChannel) return message.reply({ content: "B·∫°n ch∆∞a tham gia k√™nh voice" });
	let newQueue = client.distube.getQueue(message.guildId);
	if (!newQueue || !newQueue.songs || newQueue.songs.length == 0) return message.reply({
		embeds: [new EmbedBuilders().setColor("Random").setTitle("Danh s√°ch nh·∫°c tr·ªëng")],
	});
	let thenewmsg = await message.reply({
		content: `üîç T√¨m ki·∫øm b√†i h√°t li√™n quan cho... **${newQueue.songs[0].name}**`,
	}).catch((e) => console.log(e));
	await newQueue.addRelatedSong();
	await thenewmsg.edit({
		content: `üëç ƒê√£ th√™m: **${newQueue.songs[newQueue.songs.length - 1].name}**`,
	}).catch((e) => {
		console.log(e);
	});
});
// console.log(commands.toJSON()); // hi·ªÉn th·ªã th√¥ng tin l·ªánh ·ªü d·∫°ng JSON
export default commands;